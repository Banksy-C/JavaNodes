<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="com.banksy.service.Impl.UserServiceImpl"/>
    <bean id="beforeLog" class="com.banksy.log.BeforeLog"/>
    <bean id="afterLog" class="com.banksy.log.AfterLog"/>

    <!-- 第一种方式：通过 Spring API 实现 -->
    <!--aop的配置,首先需要导入aop的约束在上面-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;切入点 expression:表达式匹配要执行的方法 =public修饰词 返回值 类名.方法名(参数)&ndash;&gt;-->
<!--        &lt;!&ndash; 任意修饰词，com.banksy.service.UserServiceImpl类下的所有方法的任意参数&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.banksy.service.Impl.UserServiceImpl.*(..))"/>-->
<!--        &lt;!&ndash;执行环绕; advice-ref执行方法 . pointcut-ref切入点&ndash;&gt;-->
<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->


    <!--第二种方式：使用AOP的标签实现（自定义实现）-->
    <!--注册bean-->
<!--    <bean id="diy" class="com.banksy.config.DiyPointcut"/>-->
<!--    &lt;!&ndash;aop的配置,首先需要导入aop的约束在上面&ndash;&gt;-->
<!--    <aop:config>-->
<!--        &lt;!&ndash; 自定义切面，ref要引用的类 &ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--            &lt;!&ndash; 切入点 &ndash;&gt;-->
<!--            <aop:pointcut id="diyPonitcut" expression="execution(* com.banksy.service.Impl.UserServiceImpl.*(..))"/>-->
<!--            &lt;!&ndash; 通知 &ndash;&gt;-->
<!--            <aop:before pointcut-ref="diyPonitcut" method="before"/>-->
<!--            <aop:after pointcut-ref="diyPonitcut" method="after"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

    <!--第三种方式:注解实现-->
    <bean id="annotationPointcut" class="com.banksy.config.AnnotationPointcut"/>
    <!-- 开启注解支持 -->
    <aop:aspectj-autoproxy/>

</beans>